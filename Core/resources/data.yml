# The New Economy v0.1.2.0
# Author: creatorfromhell
# License: https://github.com/TheNewEconomy/EconomyCore/blob/main/license.md
Data:

  config-version: 5

  #Configurations related to syncing data across servers.
  Sync:

    #DB reload configurations.
    Reload:

      #Reload from DB on first player join.
      #Reloads data from the database when the first player joins the server after a prolonged timeframe.
      Enabled: false

      #The time to reload, in minutes.
      Time: 120

    #The data syncing method to utilize. Options: Bungee, Redis
    Type: Bungee

    #Configurations related to config syncing.
    Config:

      #The pin for this server that should be used for sharing. This should be unique.
      SharingPin: "000000"

      #Whether to sync configurations across bungee/velocity/redis.
      Sync: true

      #The hub for this server. A hub is the server that should control the configurations for this
      #server. Set to "none" to use the local configurations. Otherwise, you'll set this to the hub
      #server's SharingPin.
      Hub: "none"

      #The configs to sync from the hub.
      Configs:
        - "config.yml"
        - "messages.yml"
        - "currency"

    #Configurations relating to redis.
    Redis:

      #The redis host
      Host: "localhost"

      #The redis port
      Port: 6379

      #Your redis user's name
      User: "user"

      #Your redis user's password
      Password: "password"

      #The redis DB index
      Index: 1

      #The amount of time before timeout.
      Timeout: 2000

      #Whether to use SSL.
      SSL: false

      #Settings related to the redis connection pool
      Pool:

        #The max size of our pool.
        MaxSize: 10

        #The max idle amount.
        MaxIdle: 10

        #The min idle amount
        MinIdle: 1

        #The maximum time (in milliseconds) that a thread will wait
        #for a connection to become available before throwing an exception.
        MaxWait: 15000

        #When the pool is exhausted, block callers until a connection is returned
        #or MaxWait expires (recommended true for consistency over errors).
        BlockWhenExhausted: true

        #The interval (in milliseconds) between runs of the idle
        #connection eviction thread. This thread checks for idle connections
        #and removes them if they exceed the configured idle time.
        TimeBetweenEvictionRunsMillis: 30000

        #The minimum amount of time (in milliseconds) that a connection
        #may remain idle in the pool before it becomes eligible for eviction.
        MinEvictableIdleTimeMillis: 300000

        #Softer idle cutoff (ms): may evict if above MinIdle even when younger than MinEvictable.
        #Helps trim the pool during quiet periods while keeping MinIdle warm.
        SoftMinEvictableIdleTimeMillis: 120000

        #Number of connections to test per eviction run (positive = exact count).
        #Small number prevents long evictor pauses on big pools.
        NumTestsPerEvictionRun: 3

        # When true, every newly created connection is validated
        # before being added to the pool. This ensures only healthy
        # connections enter the pool but adds extra overhead at creation.
        # Typically left false unless your Redis setup is unstable.
        TestOnCreate: false

        #When true, the pool will validate idle connections
        #(using a PING command) during eviction runs to ensure they are still alive.
        TestWhileIdle: true

        #When true, each connection will be validated before being borrowed
        #from the pool. This helps avoid broken connections but can add latency.
        TestOnBorrow: true

        #When true, each connection will be validated before being returned
        #to the pool. This adds overhead and is usually unnecessary unless
        #you suspect connections are being corrupted during use.
        TestOnReturn: false

        #Use LIFO (stack) behavior for the pool. True = hottest connections reused first.
        #Slightly better locality and CPU cache behavior for busy servers.
        Lifo: true

        #Disable JMX to reduce overhead unless you actively monitor the pool via JMX.
        JmxEnabled: false

        #A prefix added to JMX MBean object names when monitoring the pool.
        #Useful if running multiple pools to avoid name collisions.
        JmxNamePrefix: "tne_redis_pool"

        #The base name used for JMX MBean object names.
        #Default is "pool", but can be customized for better identification.
        JmxNameBase: "pool"


  #Configurations relating to purging old data.
  Purge:

    #Should old data be purged?
    Enabled: true

    #Purge configurations relating to transactions.
    Transaction:

      #Should archived transactions be skipped during a data purge
      Archive: true

      #The amount of days before a transaction log is purged.
      Days: 20

    #Purge configurations relating to accounts
    Accounts:

      #The amount of days for a user to be logged off before purging their data?
      Days: 90

  #All configurations relating to the database
  Database:

    #The database type to use. Current options: maria-outdated, MySQL, Maria, YAML.
    #You may use maria-outdated for MariaDB versions less than 10.7.0 or MySQL versions less than 8.0.0.
    Type: "yaml"

    #The prefix to use for TheNewEconomy SQL tables
    Prefix: "tne_"

    #The file to which all the data will be saved if using a file-based database
    File: "Economy"

    #All configurations relating to the SQL Database
    SQL:

      #The SQL host
      Host: "localhost"

      #Whether to use SSL.
      SSL: false

      #Should public key retrieval be enabled for SQL?
      PublicKey: false

      #The SQL port
      Port: 3306

      #The SQL database
      DB: "TheNewEconomy"

      #Your SQL user's name
      User: "user"

      #Your SQL user's password
      Password: "password"

  #All configurations relating to the data auto saver
  AutoSaver:

    #Should TNE auto save data periodically?
    Enabled: true

    #The interval at which the auto saver will save data(in seconds)
    Interval: 600

  #Settings related to connection pool
  Pool:

    #The max size of our pool.
    MaxSize: 10

    #The max idle amount.
    MaxIdle: 10

    #The max idle lifetime.
    MaxLife: 180000

    #The timeout time for each connection.
    Timeout: 60000